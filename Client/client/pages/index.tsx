import Head from "next/head";
import React, { useEffect, useState } from "react";
import { Box, CardMedia } from "@mui/material";
import { useAppDispatch, useAppSelector } from "../src/Store";
import { selectProductItems } from "../src/Store/Selectors/productSelectors";
import { getProductItems } from "../src/Store/Thunks/productThunks";
import { ProductItems } from "../src/Components/home-page/ProductItems";

import styles from "../styles/index.module.scss";
import { RecentlyViewed } from "../src/Components/home-page/RecentlyViewed";
import Info from "../src/Components/home-page/Info";

const Home = () => {
  const [isMounted, setIsMounted] = useState<boolean>(false);
  const [scrollY, setScrollY] = useState(0);
  const [visible, setVisible] = useState<boolean>(false);

  function logit() {
    setScrollY(window.pageYOffset);
  }

  const dispatch = useAppDispatch();

  const productItems = useAppSelector(selectProductItems);

  useEffect(() => {
    function watchScroll() {
      window.addEventListener("scroll", logit);
    }
    watchScroll();

    return () => {
      window.removeEventListener("scroll", logit);
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  useEffect(() => {
    setIsMounted(true);
    if (isMounted && !productItems.length) {
      dispatch(getProductItems(""));
    }

    //eslint-disable-next-line
  }, [isMounted]);

  useEffect(() => {
    observer();
    if (visible) return;
    if (scrollY > 100) {
      setVisible(true);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [scrollY]);

  const observer = () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("styles_fadeIn");
          entry.target.classList.add("reaveal");
          return;
        }
        observer.unobserve(entry.target);
      });
    });

    const fadeOut = document.querySelectorAll(".styles_fadeOut");

    fadeOut.forEach((elem) => {
      observer.observe(elem);
    });
  };

  return (
    <>
      <Box className={styles.heroContainer}>
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <CardMedia
            component="video"
            autoPlay
            loop
            muted
            src="/hero_video.mp4"
          />
        </div>
        <div className={styles.secondContainer}></div>
      </Box>

      <img
        src="/dropplets.webp"
        alt=""
        className={
          !visible
            ? `${styles.dropplets} ${styles.fadeOut}`
            : `${styles.dropplets} ${styles.fadeIn}`
        }
      />
      <ProductItems />
      <div
        className={`${styles.divider} ${styles.div_transparent} ${styles.div_dot} `}
      >
        <span className={`${styles.div_dot_two}`}></span>
      </div>

      <>
        <RecentlyViewed />
      </>

      <div
        className={`${styles.divider} ${styles.div_transparent} ${styles.div_dot} `}
      >
        <span className={`${styles.div_dot_two}`}></span>
      </div>

      <Info />
    </>
  );
};

export default Home;
